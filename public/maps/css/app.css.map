{"version":3,"sources":["app.scss","topbar.scss","config/_color.scss","_pagination.scss","components/_lfx-player.scss","lfxui/_position.scss"],"names":[],"mappings":"AAKA;;;EAGE,uBAAsB,EAAA;;AAGxB;EACE,UAAS,EAAA;;AAGX;EACE,cAAa,EAAA;;ACbf;EACE,aAAY;EACZ,0BAAwD,EAAA;EACxD;IACE,YAAW,EAAA;EAGb;IACE,gBAAe;IACf,kBAAiB;IACjB,eAAc;IACd,iCAAgD,EAAA;EAK9C;IACE,0BAA0C;IAC1C,aAAY;IACZ,aAAY,EAAA;IACZ;MACE,cAAa,EAAA;EAGjB;IACE,UAAS;IACT,0BCvBQ;IDwBR,eAAc;IACd,aAAY,EAAA;EAKlB;IACE,mBAAkB;IAClB,kBAAiB,EAAA;IACjB;MACE,eAAc;MACd,mBAAkB;MAClB,sBAAqB,EAAA;MACrB;QACE,aAA4B;QAC5B,6BAA4B,EAAA;;AE3ChC;EACE,eAAc;EACd,YAAW;EACX,aAAY,EAAA;;ACFhB;EACE,mBAAkB,EAAA;AAIhB;EACE,qBAAa;EAAb,sBAAa;EAAb,qBAAa;EAAb,cAAa;EACb,0BAAmB;EAAnB,4BAAmB;EAAnB,uBAAmB;EAAnB,oBAAmB;EACnB,qCAAoC;EACpC,mBAAkB;EC2BxB,mBA6B0B;EAjBlB,YAF2B;EAE3B,UAF2B;EDnC7B,oCAA2B;EAA3B,gCAA2B;EAA3B,4BAA2B;EAC3B,cAAa,EAAA;EACb;IACE,gBAAe,EAAA;AAInB;ECkBJ,mBA6B0B;EAjBlB,aAF2B;EAE3B,QAF2B;ED1B7B,YAAW;EACX,cAAa,EAAA;EACb;IACE,YAAW,EAAA","file":"app.css","sourcesContent":["// @import \"node_modules/bootstrap-sass/assets/stylesheets/bootstrap\";\n@import \"../../../public/bower_components/scss-lfx-nipponcolor/stylesheets/nipponcolor\";\n\n@import \"config/color\";\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n}\n\n.hidden {\n  display: none;\n}\n\n@import \"topbar\";\n@import \"pagination\";\n@import \"components/lfx-player\";","@import \"config/color\";\n@import \"utils/function\";\n\ntop-bar {\n  height: 50px;\n  background-color: lighten(zhilizhili-color(\"blue\"), 27%);\n  > .row {\n    width: 100%;\n  }\n\n  .logo-con {\n    font-size: 30px;\n    margin-left: 20px;\n    color: #ffffff;\n    text-shadow: 1px 1px 1px zhilizhili-color('red');\n  }\n\n  .search-form {\n    .search-group {\n      input {\n        border: 1px solid zhilizhili-color(\"blue\");\n        width: 335px;\n        height: 30px;\n        &:focus {\n          outline: none;\n        }\n      }\n      button {\n        border: 0;\n        background-color: zhilizhili-color(\"blue\");\n        color: #ffffff;\n        height: 30px;\n      }\n    }\n  }\n  \n  .user {\n    margin-right: 20px;\n    line-height: 30px;\n    a {\n      color: #d689f9;\n      margin-right: 10px;\n      text-decoration: none;\n      &:hover {\n        color: lighten(#d689f9, 27%);\n        text-shadow: 0 0 3px #6a437b;\n      }\n    }\n  }\n}","$zhilizhili-color: (\n\t\"red\": #e87a90,\n\t\"orange\": #ed784a,\n\t\"yellow\": #fdc95d,\n\t\"green\": #51dd8f,\n\t\"cyan-blue\": #69b0ac,\n\t\"blue\": #51a8dd,\n\t\"purple\": #6c69b0\n) !global !default;",".paignation {\n  paper-button {\n    a {\n      display: block;\n      width: 100%;\n      height: 100%;\n    }\n  }\n}","@import \"../lfxui/position\";\n\nlfx-player {\n  > .lfx-player {\n    position: relative;\n  }\n  @at-root {\n    .lfx-player {\n      &__controlbar {\n        display: flex;\n        align-items: center;\n        background: rgba(233, 233, 233, 0.8);\n        border-radius: 5px;\n        @include position-absolute(bottom 15% left 50%);\n        transform: translateX(-50%);\n        z-index: 1000;\n        .btn {\n          font-size: 18px;\n        }\n      }\n\n      &__progress {\n        @include position-absolute(bottom 15px left 0);\n        width: 100%;\n        z-index: 1000;\n        paper-slider {\n          width: 100%;\n        }\n      }\n    }\n  }\n}","// Helper mixin for offset positioning\n// About: http://hugogiraudel.com/2013/08/05/offsets-sass-mixin/\n// ---\n// Here is an improved version adding some extra features\n// ---\n// @param [string] $position: position\n// @param [list] $args (()): offsets list\n// ---\n// Explanations\n// 1. Output position\n// 2. If `$args` is not empty\n// 3. Loop other the 4 popular offsets (`$offsets`)\n// 4. Check if the current one exists in `$args`\n// 5. If it is found in `$args`\n// 6. And if it is at last position\n// 7. Set it to 0\n// 8. Else if it is found at any other index\n// 9. Store the next value from `$args`\n// 10. If it is a valid length\n// 11. Set the offset to this value\n// 12. Else if it is another offset\n// 13. Set the offset to 0\n// 14. Else\n// 15. Warn the user\n// ---\n\n// Function checking if $value is a valid length\n// ---\n// @param [literal] $value: value to test\n// ---\n// @return [bool]\n\n@function is-valid-length($value) {\n  @return (type-of($value) == \"number\" and not unitless($value))\n       or (index(auto initial inherit 0, $value) != false);\n}\n\n@mixin position($position, $args: ()) {\n  $offsets: top right bottom left;\n  position: $position;                                               // 1\n\n  @each $offset in $offsets {                                        // 3\n    $index: index($args, $offset);                                   // 4\n\n    @if $index {                                                     // 5\n      @if $index == length($args) {                                  // 6\n        #{$offset}: 0;                                               // 7\n      }\n      @else {                                                        // 8\n        $next: nth($args, $index + 1);                               // 9\n        @if is-valid-length($next) {                                 // 10\n          #{$offset}: $next;                                         // 11\n        }\n        @else if index($offsets, $next) {                            // 12\n          #{$offset}: 0;                                             // 13\n        }\n        @else {                                                      // 14\n          @warn \"Invalid value `#{$next}` for offset `#{$offset}`.\"; // 15\n        }\n      }\n    }\n  }\n}\n\n// Shorthands\n// ---\n\n@mixin position-absolute($args: ()) {\n  @include position(absolute, $args);\n}\n\n@mixin position-fixed($args: ()) {\n  @include position(fixed, $args);\n}\n\n@mixin position-relative($args: ()) {\n  @include position(relative, $args);\n}\n"],"sourceRoot":"/source/"}