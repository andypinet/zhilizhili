{"version":3,"names":[],"mappings":"","sources":["about/my_class/animation_chara.js"],"sourcesContent":["export default function(superClass) {\n\t\textend(animationChara, superClass);\n\n\t\tfunction animationChara() {\n\t\t\tthis.dispose = bind(this.dispose, this);\n\t\t\tthis.update = bind(this.update, this);\n\t\t\tthis.start = bind(this.start, this);\n\t\t\tanimationChara.__super__.constructor.call(this, {\n\t\t\t\taddScene: false\n\t\t\t});\n\t\t\tthis._mesh;\n\t\t\tthis._ray;\n\t\t\tthis._hitList = [];\n\t\t}\n\n\t\tanimationChara.prototype.start = function() {\n\t\t\tvar geometry, material, size;\n\t\t\tanimationChara.__super__.start.call(this);\n\t\t\tthis._ray = new THREE.Raycaster();\n\t\t\tsize = 50;\n\t\t\tgeometry = new THREE.PlaneBufferGeometry(size, size);\n\t\t\tmaterial = new THREE.MeshBasicMaterial({\n\t\t\t\tcolor: 0xff0000\n\t\t\t});\n\t\t\tthis._mesh = new THREE.Mesh(geometry, material);\n\t\t\tthis._container.add(this._mesh);\n\t\t\tthis._mesh.position.x += this._u.range(100);\n\t\t\tthis._mesh.position.y += this._u.range(100);\n\t\t\treturn this._hitList.push(this._mesh);\n\t\t};\n\n\t\tanimationChara.prototype.update = function() {\n\t\t\tvar intersects, vec, x, y;\n\t\t\tanimationChara.__super__.update.call(this);\n\t\t\tx = (this._interaction.mouse().x / root.MY.myfw.stageWidth()) * 2 - 1;\n\t\t\ty = -(this._interaction.mouse().y / root.MY.myfw.stageHeight()) * 2 + 1;\n\t\t\tvec = new THREE.Vector3(x, y, 1);\n\t\t\tvec.unproject(this._camera);\n\t\t\tvec = vec.sub(this._camera.position).normalize();\n\t\t\tthis._ray.set(this._camera.position, vec);\n\t\t\treturn intersects = this._ray.intersectObjects(this._hitList);\n\t\t};\n\n\t\tanimationChara.prototype.dispose = function() {\n\t\t\treturn animationChara.__super__.dispose.call(this);\n\t\t};\n\n\t\treturn animationChara;\n\n\t}"],"file":"about/my_class/animation_chara.js","sourceRoot":"/source/"}