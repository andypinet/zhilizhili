{"version":3,"names":[],"mappings":"","sources":["about/my_class/loading_view.js"],"sourcesContent":["export default function(superClass) {\n\t\textend(loadingView, superClass);\n\n\t\tfunction loadingView(elm) {\n\t\t\tthis.setLoading = bind(this.setLoading, this);\n\t\t\tthis.hide = bind(this.hide, this);\n\t\t\tthis._updateHide = bind(this._updateHide, this);\n\t\t\tthis.update = bind(this.update, this);\n\t\t\tthis._setOnpuPos = bind(this._setOnpuPos, this);\n\t\t\tthis.resize = bind(this.resize, this);\n\t\t\tthis.dispose2 = bind(this.dispose2, this);\n\t\t\tthis.addStage = bind(this.addStage, this);\n\t\t\tloadingView.__super__.constructor.call(this, elm, {\n\t\t\t\tresize: true,\n\t\t\t\tupdate: true\n\t\t\t});\n\t\t\tthis._soundTxt;\n\t\t\tthis._onpu = [];\n\t\t\tthis._onpuPos = [];\n\t\t\tthis._onpuPosAnm = [];\n\t\t\tthis._rate = 0;\n\t\t\tthis._isHide = false;\n\t\t\tthis._isHided = false;\n\t\t\tthis.onHided;\n\t\t}\n\n\t\tloadingView.prototype.addStage = function() {\n\t\t\tvar anm, i, num, onpu, pos, results;\n\t\t\tthis._soundTxt = new root._LIBS.displayImage(root.MY.app.conf.PATH_IMG.LOADING + \"sound.png\", root.MY.app.conf.IMG_RETINA);\n\t\t\tthis._soundTxt.onLoad = this.resize;\n\t\t\tthis.addChild(this._soundTxt);\n\t\t\tthis._soundTxt.elm().css({\n\t\t\t\topacity: 0\n\t\t\t}).animate({\n\t\t\t\topacity: 1\n\t\t\t}, 1200);\n\t\t\ti = 0;\n\t\t\tnum = 7;\n\t\t\tresults = [];\n\t\t\twhile (i < num) {\n\t\t\t\tonpu = new root.MY_CLASS.onpu2d(this, i);\n\t\t\t\tthis.addChild(onpu);\n\t\t\t\tthis._onpu.push(onpu);\n\t\t\t\tpos = new root._LIBS.point3d(0, 0, 0);\n\t\t\t\tthis._onpuPos.push(pos);\n\t\t\t\tanm = new root._LIBS.animation();\n\t\t\t\tthis._onpuPosAnm.push(anm);\n\t\t\t\tresults.push(i++);\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t\tloadingView.prototype.dispose2 = function() {\n\t\t\tvar i, j, k, len1, len2, len3, n, ref, ref1, ref2, val;\n\t\t\tif (this._soundTxt != null) {\n\t\t\t\tthis._soundTxt.dispose();\n\t\t\t\tthis._soundTxt = null;\n\t\t\t}\n\t\t\tif (this._onpu != null) {\n\t\t\t\tref = this._onpu;\n\t\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\t\tval = ref[i];\n\t\t\t\t\tval.dispose();\n\t\t\t\t\tthis._onpu[i] = null;\n\t\t\t\t}\n\t\t\t\tthis._onpu = null;\n\t\t\t}\n\t\t\tif (this._onpuPos != null) {\n\t\t\t\tref1 = this._onpuPos;\n\t\t\t\tfor (i = k = 0, len2 = ref1.length; k < len2; i = ++k) {\n\t\t\t\t\tval = ref1[i];\n\t\t\t\t\tval.dispose();\n\t\t\t\t\tthis._onpuPos[i] = null;\n\t\t\t\t}\n\t\t\t\tthis._onpuPos = null;\n\t\t\t}\n\t\t\tif (this._onpuPosAnm != null) {\n\t\t\t\tref2 = this._onpuPosAnm;\n\t\t\t\tfor (i = n = 0, len3 = ref2.length; n < len3; i = ++n) {\n\t\t\t\t\tval = ref2[i];\n\t\t\t\t\tval.dispose();\n\t\t\t\t\tthis._onpuPosAnm[i] = null;\n\t\t\t\t}\n\t\t\t\tthis._onpuPosAnm = null;\n\t\t\t}\n\t\t\treturn this.onHided = null;\n\t\t};\n\n\t\tloadingView.prototype.resize = function(w, h) {\n\t\t\tthis.size(w, h);\n\t\t\tif (this._isSmt) {\n\t\t\t\tthis._soundTxt.xy(~~(w * 0.5 - this._soundTxt.width() * 0.5), ~~(h * 0.5 - this._soundTxt.height() * 0.5) + 110 / 2);\n\t\t\t} else {\n\t\t\t\tthis._soundTxt.xy(~~(w * 0.5 - this._soundTxt.width() * 0.5), ~~(h * 0.5 - this._soundTxt.height() * 0.5) + 110);\n\t\t\t}\n\t\t\treturn this._setOnpuPos(w, h);\n\t\t};\n\n\t\tloadingView.prototype._setOnpuPos = function(w, h) {\n\t\t\tvar i, interval, j, k, len1, len2, offsetY, onpuW, pos, ref, ref1, results, totalWidth, val;\n\t\t\tonpuW = 0;\n\t\t\tref = this._onpu;\n\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\tval = ref[i];\n\t\t\t\tif (val.getOnpuSize().width > onpuW) {\n\t\t\t\t\tonpuW = val.getOnpuSize().width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (onpuW === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tinterval = ~~(onpuW * 0.75);\n\t\t\ttotalWidth = (onpuW + interval) * this._onpu.length - interval;\n\t\t\tref1 = this._onpu;\n\t\t\tresults = [];\n\t\t\tfor (i = k = 0, len2 = ref1.length; k < len2; i = ++k) {\n\t\t\t\tval = ref1[i];\n\t\t\t\toffsetY = val.getOnpuSize().height * 0.3;\n\t\t\t\tif (i % 2 === 0) {\n\t\t\t\t\toffsetY *= -1;\n\t\t\t\t}\n\t\t\t\tpos = this._onpuPos[i];\n\t\t\t\tpos.setVanishingPoint(w * 0.5, h * 0.5);\n\t\t\t\tpos.x = i * (onpuW + interval) - totalWidth * 0.5 + onpuW * 0.5;\n\t\t\t\tpos.y = offsetY;\n\t\t\t\tresults.push(val.setBasePos(pos.screenX(), pos.screenY(), pos.scale()));\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t\tloadingView.prototype.update = function() {\n\t\t\treturn this._updateHide();\n\t\t};\n\n\t\tloadingView.prototype._updateHide = function() {\n\t\t\tvar anm, hidedCnt, i, j, len1, onpu, ref, val;\n\t\t\tif (this._isHide && !this._isHided) {\n\t\t\t\thidedCnt = 0;\n\t\t\t\tref = this._onpuPos;\n\t\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\t\tval = ref[i];\n\t\t\t\t\tanm = this._onpuPosAnm[i];\n\t\t\t\t\tval.z = anm.get(\"z\");\n\t\t\t\t\tonpu = this._onpu[i];\n\t\t\t\t\tonpu.setBasePos(val.screenX(), val.screenY(), val.scale());\n\t\t\t\t\tonpu.alpha(anm.get(\"opacity\"));\n\t\t\t\t\tif (anm.isCompleted()) {\n\t\t\t\t\t\tonpu.visible(false);\n\t\t\t\t\t\thidedCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hidedCnt >= this._onpuPos.length) {\n\t\t\t\t\tthis._isHided = true;\n\t\t\t\t\tif (this.onHided != null) {\n\t\t\t\t\t\treturn this.onHided();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tloadingView.prototype.hide = function() {\n\t\t\tvar delay, i, j, len1, onpu, ref, val;\n\t\t\tif (this._isHide) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._isHide = true;\n\t\t\tdelay = 2 * 60;\n\t\t\tref = this._onpuPosAnm;\n\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\tval = ref[i];\n\t\t\t\tval.set({\n\t\t\t\t\tz: {\n\t\t\t\t\t\tfrom: 0,\n\t\t\t\t\t\tto: -800\n\t\t\t\t\t},\n\t\t\t\t\topacity: {\n\t\t\t\t\t\tfrom: 1,\n\t\t\t\t\t\tto: 0\n\t\t\t\t\t},\n\t\t\t\t\tframe: 70,\n\t\t\t\t\tdelay: delay + (3 - Math.abs(3 - i)) * 3,\n\t\t\t\t\tease: \"easeInOutExpo\"\n\t\t\t\t});\n\t\t\t\tval.start();\n\t\t\t\tonpu = this._onpu[i];\n\t\t\t\tonpu.hide();\n\t\t\t}\n\t\t\treturn this.delay((function(_this) {\n\t\t\t\treturn function() {\n\t\t\t\t\treturn _this._soundTxt.elm().animate({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}, 400);\n\t\t\t\t};\n\t\t\t})(this), 2000, 0);\n\t\t};\n\n\t\tloadingView.prototype.setLoading = function(rate, key) {\n\t\t\tvar i, num, results;\n\t\t\tthis._rate = 0;\n\t\t\ti = 0;\n\t\t\twhile (i < key) {\n\t\t\t\tthis._rate += root.MY.app.conf.LOADING_RATE[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tthis._rate += root.MY.app.conf.LOADING_RATE[key] * rate;\n\t\t\ti = 0;\n\t\t\tnum = ~~(this._rate * this._onpu.length);\n\t\t\tresults = [];\n\t\t\twhile (i < num) {\n\t\t\t\tthis._onpu[i].show();\n\t\t\t\tresults.push(i++);\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t\treturn loadingView;\n\n\t}"],"file":"about/my_class/loading_view.js","sourceRoot":"/source/"}