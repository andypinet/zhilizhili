{"version":3,"names":[],"mappings":"","sources":["about/my_class/life_ui_view.js"],"sourcesContent":["export default function(superClass) {\n\t\textend(lifeUiView, superClass);\n\n\t\tfunction lifeUiView() {\n\t\t\tthis.reset = bind(this.reset, this);\n\t\t\tthis.upLifeAnimation = bind(this.upLifeAnimation, this);\n\t\t\tthis.setLifeStatus = bind(this.setLifeStatus, this);\n\t\t\tthis.setLife = bind(this.setLife, this);\n\t\t\tthis.resize = bind(this.resize, this);\n\t\t\tthis.dispose2 = bind(this.dispose2, this);\n\t\t\tthis.update = bind(this.update, this);\n\t\t\tthis._makeTriangles = bind(this._makeTriangles, this);\n\t\t\tthis.addStage = bind(this.addStage, this);\n\t\t\tlifeUiView.__super__.constructor.call(this, {\n\t\t\t\tresize: true,\n\t\t\t\tupdate: true\n\t\t\t});\n\t\t\tthis._bg;\n\t\t\tthis._gageTop;\n\t\t\tthis._gageBtm;\n\t\t\tthis._color;\n\t\t\tthis._status = -1;\n\t\t\tthis._container;\n\t\t\tthis._lifeContainer;\n\t\t\tthis._lifeImg = [];\n\t\t\tthis._tri = [];\n\t\t\tthis._nowLife = 1;\n\t\t\tthis._conf = root.MY.app.conf;\n\t\t}\n\n\t\tlifeUiView.prototype.addStage = function() {\n\t\t\tvar i, lifeImg, num;\n\t\t\tthis._container = new root._LIBS.display();\n\t\t\tthis.addChild(this._container);\n\t\t\tthis._container.mask();\n\t\t\tthis._container.size(this._conf.UI_LIFE_SIZE.WIDTH[this._device], this._conf.UI_LIFE_SIZE.HEIGHT[this._device]);\n\t\t\tthis._container.elm().css({\n\t\t\t\tborder: \"1px solid #FFF\",\n\t\t\t\tbackgroundColor: \"rgba(0,0,0,0.1)\"\n\t\t\t});\n\t\t\tif (this._isSmt) {\n\t\t\t\tthis._lifeContainer = new root._LIBS.display();\n\t\t\t\tthis._container.addChild(this._lifeContainer);\n\t\t\t\tthis._lifeContainer.mask();\n\t\t\t\tthis._lifeContainer.size(this._conf.UI_LIFE_SIZE.WIDTH[this._device], this._conf.UI_LIFE_SIZE.HEIGHT[this._device]);\n\t\t\t\ti = 0;\n\t\t\t\tnum = 3;\n\t\t\t\twhile (i < num) {\n\t\t\t\t\tlifeImg = new root._LIBS.displayImage(root.MY.app.conf.PATH_IMG.GAMEUI + \"life\" + String(i) + \".png\", root.MY.app.conf.IMG_RETINA);\n\t\t\t\t\tthis._lifeContainer.addChild(lifeImg);\n\t\t\t\t\tthis._lifeImg.push(lifeImg);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._makeTriangles();\n\t\t\t}\n\t\t\treturn this.setLifeStatus(0);\n\t\t};\n\n\t\tlifeUiView.prototype._makeTriangles = function() {\n\t\t\tvar colorH, colorL, colorS, dai, i, num, opt, totalWidth, tri, w;\n\t\t\tw = this._conf.UI_LIFE_SIZE.TRI_WIDTH[this._device];\n\t\t\tcolorH = 117 / 360;\n\t\t\tcolorS = [89 / 100, 100 / 100, 66 / 100];\n\t\t\tcolorL = [44 / 100, 35 / 100, 33 / 100];\n\t\t\ttotalWidth = -w;\n\t\t\twhile (totalWidth < this._container.width()) {\n\t\t\t\topt = {};\n\t\t\t\topt.isTop = this._tri.length % 2 === 0;\n\t\t\t\topt.width = w;\n\t\t\t\topt.height = this._container.height();\n\t\t\t\topt.h = colorH;\n\t\t\t\tif (this._tri.length % 2 === 0) {\n\t\t\t\t\topt.s = colorS[0];\n\t\t\t\t\topt.l = colorL[0];\n\t\t\t\t} else {\n\t\t\t\t\topt.s = colorS[1];\n\t\t\t\t\topt.l = colorL[1];\n\t\t\t\t}\n\t\t\t\ttri = new root.MY_CLASS.lifeTriangle(opt);\n\t\t\t\tthis._container.addChild(tri);\n\t\t\t\ttri.xy(totalWidth, 0);\n\t\t\t\ttri.centerX = tri.x() + opt.width * 0.5;\n\t\t\t\tthis._tri.push(tri);\n\t\t\t\ttotalWidth += opt.width * 0.5;\n\t\t\t}\n\t\t\ti = 0;\n\t\t\tnum = this._tri.length;\n\t\t\twhile (i < num) {\n\t\t\t\tif (i % 4 === 1 || i % 4 === 2) {\n\t\t\t\t\tdai = this._tri[i];\n\t\t\t\t\topt = {};\n\t\t\t\t\topt.isTop = i % 2 === 0;\n\t\t\t\t\topt.width = w * 0.5;\n\t\t\t\t\topt.height = this._container.height() * 0.5;\n\t\t\t\t\topt.h = colorH;\n\t\t\t\t\topt.s = colorS[2];\n\t\t\t\t\topt.l = colorL[2];\n\t\t\t\t\ttri = new root.MY_CLASS.lifeTriangle(opt);\n\t\t\t\t\tthis._container.addChild(tri);\n\t\t\t\t\tif (opt.isTop) {\n\t\t\t\t\t\ttri.xy(dai.x() + opt.width, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttri.xy(dai.x(), opt.height);\n\t\t\t\t\t}\n\t\t\t\t\ttri.centerX = tri.x() + opt.width * 0.5;\n\t\t\t\t\tthis._tri.push(tri);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\treturn this._u.sort(this._tri, \"centerX\");\n\t\t};\n\n\t\tlifeUiView.prototype.update = function() {};\n\n\t\tlifeUiView.prototype.dispose2 = function() {};\n\n\t\tlifeUiView.prototype.resize = function(w, h) {\n\t\t\tif (root.MY.myfw.conf.IS_SMT) {\n\t\t\t\treturn this._container.xy(~~(w * 0.5 - this._container.width() * 0.5), 15);\n\t\t\t} else {\n\t\t\t\treturn this._container.xy(~~(w * 0.5 - this._container.width() * 0.5), 30);\n\t\t\t}\n\t\t};\n\n\t\tlifeUiView.prototype.setLife = function(life, isAnimate) {\n\t\t\tvar i, j, len1, num, ref, val;\n\t\t\tif (isAnimate == null) {\n\t\t\t\tisAnimate = true;\n\t\t\t}\n\t\t\tif (isAnimate) {\n\t\t\t\tthis._nowLife += (life - this._nowLife) * 0.3;\n\t\t\t} else {\n\t\t\t\tthis._nowLife = life;\n\t\t\t}\n\t\t\tnum = this._tri.length;\n\t\t\tref = this._tri;\n\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\tval = ref[i];\n\t\t\t\tif (this._nowLife >= (i / num)) {\n\t\t\t\t\tval.show(isAnimate);\n\t\t\t\t} else {\n\t\t\t\t\tval.hide(isAnimate);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._isSmt) {\n\t\t\t\tthis._lifeContainer.width(~~(this._conf.UI_LIFE_SIZE.WIDTH[this._device] * life));\n\t\t\t}\n\t\t\tif (this._nowLife > 0.25 && this._nowLife <= 0.5) {\n\t\t\t\treturn this.setLifeStatus(1);\n\t\t\t} else if (this._nowLife <= 0.25) {\n\t\t\t\treturn this.setLifeStatus(2);\n\t\t\t} else {\n\t\t\t\treturn this.setLifeStatus(0);\n\t\t\t}\n\t\t};\n\n\t\tlifeUiView.prototype.setLifeStatus = function(status) {\n\t\t\tvar i, j, k, len1, len2, ref, ref1, results, val;\n\t\t\tif (this._status === status) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._status = status;\n\t\t\tref = this._tri;\n\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\tval = ref[i];\n\t\t\t\tval.updateColor2([120, 60, 0][this._status]);\n\t\t\t\tval.draw();\n\t\t\t}\n\t\t\tif (this._isSmt) {\n\t\t\t\tref1 = this._lifeImg;\n\t\t\t\tresults = [];\n\t\t\t\tfor (i = k = 0, len2 = ref1.length; k < len2; i = ++k) {\n\t\t\t\t\tval = ref1[i];\n\t\t\t\t\tresults.push(val.visible(i === this._status));\n\t\t\t\t}\n\t\t\t\treturn results;\n\t\t\t}\n\t\t};\n\n\t\tlifeUiView.prototype.upLifeAnimation = function() {\n\t\t\tvar i, j, len1, ref, results, val;\n\t\t\tif (!this._isSmt) {\n\t\t\t\tref = this._tri;\n\t\t\t\tresults = [];\n\t\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\t\tval = ref[i];\n\t\t\t\t\tresults.push(val.lifeUp());\n\t\t\t\t}\n\t\t\t\treturn results;\n\t\t\t}\n\t\t};\n\n\t\tlifeUiView.prototype.reset = function() {\n\t\t\tvar i, j, len1, ref, val;\n\t\t\tthis.setLife(1, false);\n\t\t\tref = this._tri;\n\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\tval = ref[i];\n\t\t\t\tval.reset();\n\t\t\t}\n\t\t\tif (this._isSmt) {\n\t\t\t\tthis._lifeContainer.width(~~(this._conf.UI_LIFE_SIZE.WIDTH[this._device] * 1));\n\t\t\t}\n\t\t\treturn this.setLifeStatus(0);\n\t\t};\n\n\t\treturn lifeUiView;\n\n\t}"],"file":"about/my_class/life_ui_view.js","sourceRoot":"/source/"}