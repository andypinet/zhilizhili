{"version":3,"names":[],"mappings":"","sources":["about/my_class/num_view.js"],"sourcesContent":["export default function(superClass) {\n\t\textend(numView, superClass);\n\n\t\tfunction numView(keta, type, margin) {\n\t\t\tthis.type = bind(this.type, this);\n\t\t\tthis.keta = bind(this.keta, this);\n\t\t\tthis.getSize = bind(this.getSize, this);\n\t\t\tthis.setNum = bind(this.setNum, this);\n\t\t\tthis._disposeNum = bind(this._disposeNum, this);\n\t\t\tthis._makeNum = bind(this._makeNum, this);\n\t\t\tthis.dispose2 = bind(this.dispose2, this);\n\t\t\tthis.addStage = bind(this.addStage, this);\n\t\t\tnumView.__super__.constructor.call(this);\n\t\t\tthis._keta = keta;\n\t\t\tthis._numImg = [];\n\t\t\tthis._margin = margin || 0;\n\t\t\tthis._type = type || \"a\";\n\t\t}\n\n\t\tnumView.prototype.addStage = function() {\n\t\t\treturn this._makeNum();\n\t\t};\n\n\t\tnumView.prototype.dispose2 = function() {};\n\n\t\tnumView.prototype._makeNum = function() {\n\t\t\tvar i, num, results;\n\t\t\tthis._disposeNum();\n\t\t\tthis._numImg = [];\n\t\t\ti = 0;\n\t\t\tresults = [];\n\t\t\twhile (i < this._keta) {\n\t\t\t\tnum = new root._LIBS.spriteSheetView(root.MY.app.conf.PATH_IMG.NUM + \"all.png\", root.MY.app.conf.NUM_SPRITE_JSON, {\n\t\t\t\t\timgRetina: root.MY.app.conf.IMG_RETINA\n\t\t\t\t});\n\t\t\t\tthis.addChild(num);\n\t\t\t\tthis._numImg.push(num);\n\t\t\t\tresults.push(i++);\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t\tnumView.prototype._disposeNum = function() {\n\t\t\tvar i, j, len1, ref, val;\n\t\t\tif (this._numImg != null) {\n\t\t\t\tref = this._numImg;\n\t\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\t\tval = ref[i];\n\t\t\t\t\tval.dispose();\n\t\t\t\t\tthis._numImg[i] = null;\n\t\t\t\t}\n\t\t\t\treturn this._numImg = null;\n\t\t\t}\n\t\t};\n\n\t\tnumView.prototype.setNum = function(num) {\n\t\t\tvar i, j, len1, margin, ref, results, val, x;\n\t\t\tnum = this._u.numStr(num, this._keta);\n\t\t\tx = 0;\n\t\t\tmargin = this._margin;\n\t\t\tref = this._numImg;\n\t\t\tresults = [];\n\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\tval = ref[i];\n\t\t\t\tval.setState(this._type + num.substr(i, 1) + \".png\");\n\t\t\t\tval.x(x);\n\t\t\t\tresults.push(x += val.width() + margin);\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t\tnumView.prototype.getSize = function() {\n\t\t\tvar h, i, j, len1, ref, size, val, w;\n\t\t\tw = 0;\n\t\t\th = 0;\n\t\t\tref = this._numImg;\n\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\tval = ref[i];\n\t\t\t\tsize = val.getSize();\n\t\t\t\tw += size.w + this._margin;\n\t\t\t\th = size.h;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tw: w - this._margin,\n\t\t\t\th: h\n\t\t\t};\n\t\t};\n\n\t\tnumView.prototype.keta = function(val) {\n\t\t\tif (this._keta === val) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._keta = val;\n\t\t\treturn this._makeNum();\n\t\t};\n\n\t\tnumView.prototype.type = function(val) {\n\t\t\treturn this._type = val;\n\t\t};\n\n\t\treturn numView;\n\n\t}"],"file":"about/my_class/num_view.js","sourceRoot":"/source/"}