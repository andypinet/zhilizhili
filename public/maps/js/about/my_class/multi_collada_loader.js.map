{"version":3,"names":[],"mappings":"","sources":["about/my_class/multi_collada_loader.js"],"sourcesContent":["export default function() {\n\t\tfunction multiColladaLoader() {\n\t\t\tthis.get = bind(this.get, this);\n\t\t\tthis._makeSearchTable = bind(this._makeSearchTable, this);\n\t\t\tthis._eCompleteData = bind(this._eCompleteData, this);\n\t\t\tthis._eProgressData = bind(this._eProgressData, this);\n\t\t\tthis._loadCollada = bind(this._loadCollada, this);\n\t\t\tthis.load = bind(this.load, this);\n\t\t\tthis._list;\n\t\t\tthis._table;\n\t\t\tthis._loadedNum = 0;\n\t\t\tthis.onProgress;\n\t\t\tthis.onComplete;\n\t\t}\n\n\t\tmultiColladaLoader.prototype.load = function(list) {\n\t\t\tthis._list = list;\n\t\t\treturn this._loadCollada();\n\t\t};\n\n\t\tmultiColladaLoader.prototype._loadCollada = function() {\n\t\t\tvar loader;\n\t\t\tloader = new THREE.ColladaLoader();\n\t\t\tthis._list[this._loadedNum].loader = loader;\n\t\t\treturn loader.load(this._list[this._loadedNum].file, this._eCompleteData, this._eProgressData);\n\t\t};\n\n\t\tmultiColladaLoader.prototype._eProgressData = function(e) {\n\t\t\tif (this.onProgress != null) {\n\t\t\t\treturn this.onProgress((this._loadedNum + (e.loaded / e.total)) / this._list.length);\n\t\t\t}\n\t\t};\n\n\t\tmultiColladaLoader.prototype._eCompleteData = function(collada) {\n\t\t\tvar b, i, j, len1, ref, val;\n\t\t\tthis._list[this._loadedNum].obj = collada.scene;\n\t\t\tcollada.scene.traverse((function(_this) {\n\t\t\t\treturn function(child) {\n\t\t\t\t\tvar animation;\n\t\t\t\t\tif (child instanceof THREE.SkinnedMesh) {\n\t\t\t\t\t\tanimation = new THREE.Animation(child, child.geometry.animation);\n\t\t\t\t\t\tanimation.play();\n\t\t\t\t\t\treturn _this._list[_this._loadedNum].anm = animation;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t})(this));\n\t\t\tref = collada.skins;\n\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\tval = ref[i];\n\t\t\t\tval.material.map = this._list[this._loadedNum].tex;\n\t\t\t\tval.material.side = THREE.DoubleSide;\n\t\t\t\tval.geometry.computeBoundingBox();\n\t\t\t\tif (this._list[this._loadedNum].rePos) {\n\t\t\t\t\tb = val.geometry.boundingBox;\n\t\t\t\t\tval.position.z = -b.min.z - (b.max.z - b.min.z) * 0.5;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._loadedNum++;\n\t\t\tif (this._loadedNum >= this._list.length) {\n\t\t\t\tthis._makeSearchTable();\n\t\t\t\tif (this.onComplete != null) {\n\t\t\t\t\treturn this.onComplete();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this._loadCollada();\n\t\t\t}\n\t\t};\n\n\t\tmultiColladaLoader.prototype._makeSearchTable = function() {\n\t\t\tvar i, j, len1, ref, results, val;\n\t\t\tthis._table = {};\n\t\t\tref = this._list;\n\t\t\tresults = [];\n\t\t\tfor (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n\t\t\t\tval = ref[i];\n\t\t\t\tresults.push(this._table[val.key] = val);\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t\tmultiColladaLoader.prototype.get = function(key) {\n\t\t\treturn this._table[key];\n\t\t};\n\n\t\treturn multiColladaLoader;\n\n\t}"],"file":"about/my_class/multi_collada_loader.js","sourceRoot":"/source/"}